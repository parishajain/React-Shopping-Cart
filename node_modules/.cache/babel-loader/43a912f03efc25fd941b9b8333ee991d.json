{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/cj/Desktop/turing-project/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cj/Desktop/turing-project/src/components/Product.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  .card{\\n    border-color : transparent;\\n    transition : all 1s linear;\\n  }\\n\\n  .card-footer{\\n    baxkground : transparent;\\n    border-top : transparent;\\n    transition : all 1s linear;\\n  }\\n  &:hover{\\n    .card{\\n      border: 0.04rem solid rgba(0,0,0,0.2);\\n      box-shadow : 2px 2px 5px 0px rgba(0,0,0,0.2),\\n    }\\n    .card-footer{\\n      background: rgba(247,247,247);\\n    }\\n  }\\n  .img-container{\\n    position: relative;\\n    overflow : hidden;\\n  }\\n  .card-img-top{\\n    transition: all 1s linear;\\n  }\\n  .img-container:hover .card-img-top{\\n    transform: scale(1.2);\\n  }\\n  .cart-btn{\\n    position: absolute;\\n    bottom : 0;\\n    right: 0;\\n    padding: 0.2rem 0.4rem;\\n    background: var(--lightBlue);\\n    border: none;\\n    color:var(--mainWhite);\\n    font-size: 1.4rem;\\n    border-radius: 0.5rem 0 0 0;\\n    transform : translate(100%, 100%);\\n }\\n .img-container:hover .cart-btn{\\n   transform: translate(0,0);\\n   transition: all 1s linear;\\n }\\n .cart-btn:hover{\\n   color var(--mainBlue);\\n   cursor: pointer;\\n }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { ProductConsumer } from '../context';\nimport PropTypes from 'prop-types';\nexport default class Product extends Component {\n  render() {\n    const _this$props$product = this.props.product,\n          id = _this$props$product.id,\n          title = _this$props$product.title,\n          img = _this$props$product.img,\n          price = _this$props$product.price,\n          inCart = _this$props$product.inCart;\n    return React.createElement(ProductWrapper, {\n      className: \"col-9 mx-auto col-md-6 col-lg-3 my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(ProductConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, value => React.createElement(\"div\", {\n      className: \"img-container p-5\",\n      onClick: () => value.handleDetail(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"./details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: img,\n      alt: \"product\",\n      className: \"card-img-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"cart-btn\",\n      disabled: inCart ? true : false,\n      onClick: () => {\n        value.addToCart(id);\n        value.openModal(id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, inCart ? React.createElement(\"p\", {\n      className: \"text-capitalize mb-0\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \" in cart\") : React.createElement(\"i\", {\n      className: \"fas fa-cart-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      class: \"card-footer d-flex justify-content-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"align-self-center mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \" \", title, \" \"), React.createElement(\"h5\", {\n      className: \"text-blue font-italic mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"mr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \" $ \"), price))));\n  }\n\n} //to catch the mistake in the data with the datatypes\n\nProduct.propTypes = {\n  product: PropTypes.shape({\n    id: PropTypes.number,\n    img: PropTypes.string,\n    title: PropTypes.string,\n    price: PropTypes.number,\n    inCart: PropTypes.bool\n  }).isRequired\n};\nconst ProductWrapper = styled.div(_templateObject());","map":{"version":3,"sources":["/Users/cj/Desktop/turing-project/src/components/Product.js"],"names":["React","Component","styled","Link","ProductConsumer","PropTypes","Product","render","props","product","id","title","img","price","inCart","value","handleDetail","addToCart","openModal","propTypes","shape","number","string","bool","isRequired","ProductWrapper","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport {Link } from 'react-router-dom';\nimport {ProductConsumer} from '../context';\nimport PropTypes from 'prop-types';\n\n\nexport default class Product extends Component {\n  render() {\n    const {id, title, img,price, inCart} = this.props.product;\n    return (\n      <ProductWrapper className = \"col-9 mx-auto col-md-6 col-lg-3 my-3\">\n      <div className = \"card\">\n      <ProductConsumer >\n        {(value) => (\n        <div className=\"img-container p-5\" onClick={ () => value.handleDetail(id)}>\n            <Link to='./details' >\n                <img src={img} alt=\"product\" className=\"card-img-top\" />\n            </Link>\n            <button className=\"cart-btn\" disabled={inCart ? true : false} \n              onClick = {() => { \n                value.addToCart(id); \n                value.openModal(id);\n              } \n            } >\n            {inCart ? (<p className=\"text-capitalize mb-0\" disabled> in cart</p>) : (<i className=\"fas fa-cart-plus\" />\n            )}\n            </button>\n          </div>\n          )}\n        \n          </ProductConsumer>\n          { /* card footer*/}\n          <div class=\"card-footer d-flex justify-content-between\">\n            <p className=\"align-self-center mb-0\"> {title} </p>\n            <h5 className=\"text-blue font-italic mb-0\">\n              <span className = \"mr-1\"> $ </span>\n              {price}\n            </h5>\n          </div>\n        </div>\n      </ProductWrapper>\n      \n    );\n  }\n}\n\n\n//to catch the mistake in the data with the datatypes\nProduct.propTypes = {\n  product: PropTypes.shape({\n    id : PropTypes.number,\n    img : PropTypes.string,\n    title: PropTypes.string,\n    price: PropTypes.number,\n    inCart:PropTypes.bool\n  }).isRequired\n}\nconst ProductWrapper = styled.div`\n  .card{\n    border-color : transparent;\n    transition : all 1s linear;\n  }\n\n  .card-footer{\n    baxkground : transparent;\n    border-top : transparent;\n    transition : all 1s linear;\n  }\n  &:hover{\n    .card{\n      border: 0.04rem solid rgba(0,0,0,0.2);\n      box-shadow : 2px 2px 5px 0px rgba(0,0,0,0.2),\n    }\n    .card-footer{\n      background: rgba(247,247,247);\n    }\n  }\n  .img-container{\n    position: relative;\n    overflow : hidden;\n  }\n  .card-img-top{\n    transition: all 1s linear;\n  }\n  .img-container:hover .card-img-top{\n    transform: scale(1.2);\n  }\n  .cart-btn{\n    position: absolute;\n    bottom : 0;\n    right: 0;\n    padding: 0.2rem 0.4rem;\n    background: var(--lightBlue);\n    border: none;\n    color:var(--mainWhite);\n    font-size: 1.4rem;\n    border-radius: 0.5rem 0 0 0;\n    transform : translate(100%, 100%);\n }\n .img-container:hover .cart-btn{\n   transform: translate(0,0);\n   transition: all 1s linear;\n }\n .cart-btn:hover{\n   color var(--mainBlue);\n   cursor: pointer;\n }\n`;"]},"metadata":{},"sourceType":"module"}