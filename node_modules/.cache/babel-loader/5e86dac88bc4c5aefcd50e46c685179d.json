{"ast":null,"code":"import _objectSpread from \"/Users/cj/Desktop/turing-project/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/cj/Desktop/turing-project/src/context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nimport Details from './components/Details';\nconst ProductContext = React.createContext(); //Provider\n//consumer\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: true,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedDecrementProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedDecrementProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotals();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        closeModal: this.closeModal,\n        openModal: this.openModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/cj/Desktop/turing-project/src/context.js"],"names":["React","Component","storeProducts","detailProduct","Details","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","selectedDecrementProduct","removeItem","filter","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {storeProducts, detailProduct} from './data';\nimport Details from './components/Details';\n\nconst ProductContext = React.createContext();\n//Provider\n//consumer\n\n\nclass ProductProvider extends Component {\n    state = {\n        products : [],\n        detailProduct : detailProduct,\n        cart : [],\n        modalOpen : true,\n        modalProduct: detailProduct,\n        cartSubTotal : 0,\n        cartTax : 0,\n        cartTotal : 0\n    };\n\n    componentDidMount(){\n      this.setProducts();\n    }\n\n    setProducts = () =>{\n      let tempProducts = [];\n      storeProducts.forEach(item =>{\n        const singleItem = {...item};\n        tempProducts = [...tempProducts,singleItem];\n      })\n      \n      this.setState(() => {\n        return {products:tempProducts}\n      })\n    }\n\n    getItem = (id) => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    handleDetail = id => {\n       const product = this.getItem(id);\n       this.setState(() => {\n         return {detailProduct: product};\n       }) \n    };\n\n    addToCart = id => {\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItem(id));\n        const product = tempProducts[index];\n        product.inCart = true;\n        product.count = 1;\n       const price = product.price;\n       product.total = price;\n       this.setState(() => {\n         return { products : tempProducts, cart: [...this.state.cart, product] };\n       }, \n       () => {\n         this.addTotals();\n       }\n      );\n    };\n\n    openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {modalProduct:product, modalOpen: true}\n      })\n    } \n\n    closeModal = () => {\n      this.setState(()=> {\n        return {modalOpen: false}\n      })\n    }\n    increment = (id) => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id ===id)\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count +1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n          return {cart: [...tempCart]}\n      }, () => {this.addTotals()})\n    };\n\n    decrement = (id) => {\n      let tempCart = [...this.state.cart];\n      const selectedDecrementProduct = tempCart.find(item => item.id === id)\n      const index = tempCart.indexOf(selectedDecrementProduct);\n      const product = tempCart[index];\n      product.count = product.count-1;\n\n      if(product.count === 0){\n        this.removeItem(id);\n      }\n      else{\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {cart : [...tempCart]}\n      }, () => {this.addTotals()})\n    }\n  }\n\n    removeItem = (id) =>{\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n\n      tempCart = tempCart.filter(item => item.id !== id);\n\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n\n      this.setState(() => {\n        return {\n          cart : [...tempCart],\n          products : [...tempProducts]\n        }\n      }, () =>{\n        this.addTotals();\n      })\n\n    };\n\n    clearCart = () => {\n      this.setState(() => {\n        return {cart : []}\n      }, () => {\n          this.setProducts();\n          this.addTotals();\n      });\n    }\n\n    addTotals = ( ) => {\n        let subTotal = 0;\n        this.state.cart.map(item => (subTotal += item.total));\n        const tempTax = subTotal * 0.1;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subTotal + tax;\n        this.setState(() => {\n          return {\n            cartSubTotal : subTotal,\n            cartTax : tax,\n            cartTotal : total\n          }\n        })\n    }\n\n    render() {\n    return (\n      <ProductContext.Provider \n      value ={{\n          ...this.state,\n          handleDetail: this.handleDetail,\n          addToCart: this.addToCart,\n          closeModal: this.closeModal,\n          openModal: this.openModal,\n          increment: this.increment,\n          decrement: this.decrement,\n          removeItem: this.removeItem,\n          clearCart : this.clearCart\n        }}>\n          {this.props.children}\n      </ProductContext.Provider>\n    );\n  }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}